{"version":3,"sources":["Graph.js","DataUpload.js","ResourceMap.js","Queries.js","App.js","serviceWorker.js","index.js"],"names":["DropDown","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","href","data-target","id","onClick","changeChart","Component","Analysis","dataPoints","raw_data","datasets","map","x","label","math","data","ChartContainer","_this","state","chartType","newChartType","setState","alert","console","log","date","Date","toString","split","slice","join","MyChart","_this2","react_chartjs","height","width","Graph_DropDown","bind","original","labels","key","type","defaultChecked","toggleMonth","toggleYear","Graph_Analysis","saveChart","Graph","_this3","fillColor","strokeColor","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointHoverRadius","pointRadius","pointHitRadius","spanGaps","year","newStuff","yearList","push","includes","splice","indexOf","fullYearList","dataPoint","raw_labels","month","index","newLabels","filter","dataPointIndex","i","length","val","_this4","Graph_ChartContainer","saveQuery","ob","uploader","FineUploaderTraditional","options","request","endpoint","callbacks","onComplete","name","response","UploadComponent","file_input_default","multiple","accept","class","ResourceMap","major","orientation","y","category","title","marker","color","majorList","react_plotly_default","layout","bargap","QPanel","queries","currentGraph","graphType","graphNow","graphData","graphtype","updateGraph","App","lastState","BrowserRouter","style","display","padding","float","Link","to","flex","Route","path","exact","component","src_Graph","src_ResourceMap","Queries","DataUpload","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8025ce7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Line as LineChart, Bar as BarChart, Pie as PieChart, Radar as RadarChart} from 'react-chartjs';\nimport Chart from \"chart.js\";\nimport * as math from 'mathjs';\n\nclass DropDown extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\t\t\n\t\treturn(\n\t\t\t<div className=\"col s12 m12 l12 center-align\">\n\t\t\t\t<a href=\"#\" className=\"dropdown-trigger btn\" data-target=\"dropdown\">Chart Type</a>\n\t\t\t\t<ul id=\"dropdown\" className=\"dropdown-content\">\n\t\t\t\t\t<li onClick={ this.props.changeChart(\"line\") }>\n\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\tLine\n\t\t\t\t\t\t\t<i className=\"material-icons right\">show_chart</i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"divider\"></li>\n\t\t\t\t\t<li onClick={ this.props.changeChart(\"bar\") }>\n\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\tBar\n\t\t\t\t\t\t\t<i className=\"material-icons right\">insert_chart</i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li className=\"divider\"></li>\n\t\t\t\t\t<li onClick={ this.props.changeChart(\"radar\") }>\n\t\t\t\t\t\t<a href='#'>\n\t\t\t\t\t\t\tRadar\n\t\t\t\t\t\t\t<i className=\"material-icons right\">bubble_chart</i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Analysis extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender() {\n\n\t\treturn(\n\t\t\t<table className=\"highlight striped\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t<th>Mean</th>\n\t\t\t\t\t\t<th>Median</th>\n\t\t\t\t\t\t<th>Standard Deviation</th>\n\t\t\t\t\t\t<th>Max</th>\n\t\t\t\t\t\t<th>Min</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{ \n\t\t\t\t\t\tthis.props.dataPoints.raw_data.datasets.map(x => {\n\t\t\t\t\t\t\treturn <tr>\n\t\t\t\t\t\t\t\t<th>{ x.label } </th>\n\t\t\t\t\t\t\t\t<td> { math.round(math.mean(x.data), 2) } </td>\n\t\t\t\t\t\t\t\t<td> { math.round(math.median(x.data), 2) } </td>\n\t\t\t\t\t\t\t\t<td> { math.round(math.std(x.data), 2) } </td>\n\t\t\t\t\t\t\t\t<td> { math.round(math.max(x.data), 2) } </td>\n\t\t\t\t\t\t\t\t<td> { math.round(math.min(x.data), 2) } </td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t)\n\t}\n}\n\nclass ChartContainer extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\"chartType\": \"line\",\n\t\t}\n\t}\n\n\tchangeChart(newChartType) {\n\t\tthis.setState({\n\t\t\t\"chartType\": newChartType\n\t\t})\n\t}\n\n\tsaveChart() {\n\t\talert(\"saved!\")\n\t\tconsole.log(this.state.chartType)\n\t\tlet now = new Date()\n\t\tlet date = now.toString().split(\" \").slice(1,5).join(\"-\")\n\t\tconsole.log(date)\n\t}\n\n\trender() {\n\n\t\tlet MyChart\n\n\t\tif (this.state.chartType === \"line\") {\n\t\t\tMyChart = <LineChart data={ this.props.dataPoints.raw_data } height=\"300px\" width=\"500px\" />\n\t\t} else if (this.state.chartType === \"bar\") {\n\t\t\tMyChart = <BarChart data={ this.props.dataPoints.raw_data } height=\"300px\" width=\"500px\" />\n\t\t} else if (this.state.chartType === \"radar\") {\n\t\t\tMyChart = <RadarChart data={ this.props.dataPoints.raw_data } height=\"300px\" width=\"500px\" />\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"col s6 m6 l6\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<DropDown changeChart={ (a) => this.changeChart.bind(this, a) } />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s12 m12 l12\">\n\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t<div className=\"col s4 m4 l4\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.dataPoints.original.labels.map(x => {\n\t\t\t\t\t\t\t\t\t\treturn <div key={ x }>\n\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" className=\"filled-in\" defaultChecked onClick={ this.props.toggleMonth(x) }/>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{ x }</span>\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s4 m4 l4\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tthis.props.dataPoints.original.datasets.map(x => {\n\t\t\t\t\t\t\t\t\t\treturn <div key={ x[\"label\"] }>\n\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" defaultChecked onClick={ this.props.toggleYear(x[\"label\"]) }/>\n\t\t\t\t\t\t\t\t\t\t\t\t<span>{ x[\"label\"] }</span>\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"col s4 m4 l4\">\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s12 m12 l12\">\n\t\t\t\t\t\t{ MyChart }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s1 m1 l1\"></div>\n\t\t\t\t\t<div className=\"col s10 m10 l10\">\n\t\t\t\t\t\t<ul className=\"collapsible\">\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<div className=\"collapsible-header\">\n\t\t\t\t\t\t\t\t\tREPORT\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons right\">subject</i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"collapsible-body\">\n\t\t\t\t\t\t\t\t\t<Analysis dataPoints={this.props.dataPoints} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col s1 m1 l1\"></div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s4 m4 l4\"></div>\n\t\t\t\t\t<div className=\"col s4 m4 l4\">\n\t\t\t\t\t\t<button className=\"btn waves-effect waves-light\" onClick={ this.saveChart.bind(this) } > \n\t\t\t\t\t\t\tSAVE\n\t\t\t\t\t\t\t<i className=\"material-icons right\">save</i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col s4 m4 l4\"></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Graph extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\"original\": {\n\t\t\t    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n\t\t\t    datasets: [\n\t\t\t        {\n\t\t\t            label: \"2017\",\n\t\t\t            fillColor: \"rgba(220,220,220,0.2)\",\n\t\t\t\t\t\tstrokeColor: \"rgba(220,220,220,1)\",\n\t\t\t\t\t\tpointColor: \"rgba(220,220,220,1)\",\n\t\t\t\t\t\tpointStrokeColor: \"#fff\",\n\t\t\t\t\t\tpointHighlightFill: \"#fff\",\n\t\t\t\t\t\tpointHighlightStroke: \"rgba(220,220,220,1)\",\n\t\t\t            pointHoverRadius: 5,\n\t\t\t            pointRadius: 1,\n\t\t\t            pointHitRadius: 10,\n\t\t\t            data: [65, 59, 80, 81, 56, 55, 40],\n\t\t\t            spanGaps: false,\n\t\t\t        }, \n\t\t\t        {\n\t\t\t            label: \"2016\",\n\t\t\t            fillColor: \"rgba(151,187,205,0.2)\",\n\t\t\t\t\t\tstrokeColor: \"rgba(151,187,205,1)\",\n\t\t\t\t\t\tpointColor: \"rgba(151,187,205,1)\",\n\t\t\t\t\t\tpointStrokeColor: \"#fff\",\n\t\t\t\t\t\tpointHighlightFill: \"#fff\",\n\t\t\t\t\t\tpointHighlightStroke: \"rgba(151,187,205,1)\",\n\t\t\t            pointHoverRadius: 5,\n\t\t\t            pointRadius: 1,\n\t\t\t            pointHitRadius: 10,\n\t\t\t            data: [65, 20, 40, 21, 36, 15, 20],\n\t\t\t            spanGaps: false,\n\t\t\t        }\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"raw_data\": {\n\t\t\t    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n\t\t\t    datasets: [\n\t\t\t        {\n\t\t\t            label: \"2017\",\n\t\t\t            fillColor: \"rgba(220,220,220,0.2)\",\n\t\t\t\t\t\tstrokeColor: \"rgba(220,220,220,1)\",\n\t\t\t\t\t\tpointColor: \"rgba(220,220,220,1)\",\n\t\t\t\t\t\tpointStrokeColor: \"#fff\",\n\t\t\t\t\t\tpointHighlightFill: \"#fff\",\n\t\t\t\t\t\tpointHighlightStroke: \"rgba(220,220,220,1)\",\n\t\t\t            pointHoverRadius: 5,\n\t\t\t            pointRadius: 1,\n\t\t\t            pointHitRadius: 10,\n\t\t\t            data: [65, 59, 80, 81, 56, 55, 40],\n\t\t\t            spanGaps: false,\n\t\t\t        }, \n\t\t\t        {\n\t\t\t            label: \"2016\",\n\t\t\t            fillColor: \"rgba(151,187,205,0.2)\",\n\t\t\t\t\t\tstrokeColor: \"rgba(151,187,205,1)\",\n\t\t\t\t\t\tpointColor: \"rgba(151,187,205,1)\",\n\t\t\t\t\t\tpointStrokeColor: \"#fff\",\n\t\t\t\t\t\tpointHighlightFill: \"#fff\",\n\t\t\t\t\t\tpointHighlightStroke: \"rgba(151,187,205,1)\",\n\t\t\t            pointHoverRadius: 5,\n\t\t\t            pointRadius: 1,\n\t\t\t            pointHitRadius: 10,\n\t\t\t            data: [65, 20, 40, 21, 36, 15, 20],\n\t\t\t            spanGaps: false,\n\t\t\t        }\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t}\n\n\ttoggleYear(year) {\n\n\t\tlet newStuff = this.state.raw_data.datasets\n\t\tlet yearList = []\n\t\tthis.state.raw_data.datasets.map(x => {\n\t\t\tyearList.push(x.label)\n\t\t})\n\n\t\tif (yearList.includes(year)) {\n\t\t\tnewStuff = this.state.raw_data.datasets.splice(yearList.indexOf(year), 1)\n\t\t} else {\n\t\t\tlet fullYearList = []\n\t\t\tthis.state.raw_data.datasets.map(x => {\n\t\t\t\tfullYearList.push(x.label)\n\t\t\t})\n\n\t\t\tlet dataPoint = this.state.original.datasets[fullYearList.indexOf(year)]\n\t\t\tnewStuff.push(dataPoint)\n\t\t}\n\n\t\tlet raw_labels = this.state.raw_data.labels\n\n\t\tthis.setState({\n\t\t\t\"raw_data\": {\n\t\t\t\t\"labels\": raw_labels,\n\t\t\t\t\"datasets\": newStuff\n\t\t\t}\n\t\t})\n\n\t\tconsole.log(\"here\", this.state)\n\t}\n\n\ttoggleMonth(month) {\n\t\tlet raw_labels = this.state.raw_data.labels\n\t\tlet index = this.state.raw_data.labels.indexOf(month)\n\t\tlet newStuff = []\n\n\t\tif (index > -1) {\n\t\t\traw_labels.splice(index, 1)\n\n\t\t\tthis.state.raw_data.datasets.map(x => {\n\t\t\t\tx[\"data\"].splice(index, 1)\n\t\t\t\tnewStuff.push(x)\n\t\t\t})\n\t\t} else {\n\t\t\traw_labels.push(month)\n\n\t\t\tlet newLabels = this.state.original.labels.filter(label => raw_labels.includes(label) )\n\n\t\t\traw_labels = newLabels\n\n\t\t\tlet dataPointIndex = this.state.original.labels.indexOf(month)\n\n\t\t\tfor (let i = 0; i < this.state.original.datasets.length; i++) {\n\t\t\t\tlet val = this.state.original.datasets[i][\"data\"][dataPointIndex]\n\t\t\t\tthis.state.raw_data.datasets[i][\"data\"].splice(newLabels.indexOf(month), 0, val)\n\t\t\t\tnewStuff.push(this.state.raw_data.datasets[i])\n\t\t\t}\n\n\t\t\tconsole.log(newStuff)\n\t\t}\n\n\t\tthis.setState({\n\t\t\t\"raw_data\": {\n\t\t\t\t\"labels\": raw_labels,\n\t\t\t\t\"datasets\": newStuff\n\t\t\t}\n\t\t})\n\t}\n\n\trender() {\n\n\t\treturn(\n\t\t\t<ChartContainer dataPoints={ this.state } toggleMonth= { (month) => this.toggleMonth.bind(this, month) } toggleYear= { (year) => this.toggleYear.bind(this, year) } saveQuery={ (ob) => this.props.saveQuery.bind(this, ob) } ></ChartContainer>\n\t\t)\n\t}\n}\n\nexport default Graph","import React, { Component } from 'react';\n\nimport FileInput from 'react-fine-uploader/file-input'\nimport FineUploaderTraditional from 'fine-uploader-wrappers'\n\nconst uploader = new FineUploaderTraditional({\n   options: {\n      request: {\n         endpoint: 'upload/'\n      },\n      callbacks: {\n         onComplete: (id, name, response) => {\n            alert(\"success!\")\n         }\n      }\n   }\n})\n\nclass UploadComponent extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"col s4 m4 l4\"></div>\n\t\t\t\t<div className=\"col s4 m4 l4\">\n\t\t\t\t\t<FileInput multiple accept='csv/*' uploader={ uploader }>\n\t\t\t\t\t\t<span className=\"btn-large\">\n\t\t\t\t\t\t\t<i class=\"material-icons left\">cloud</i>\n\t\t\t\t\t\t\tChoose Files\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</FileInput>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col s4 m4 l4\"></div>\n\t\t\t</div>\n\t\t)\n\t}\n} \n\nexport default UploadComponent","import React, { Component } from 'react';\n\nimport Plot from 'react-plotly.js';\n\nclass ResourceMap extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmajor: \"chemistry\",\n\t\t\tdata: [\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"bar\",\n\t\t\t\t\t\"orientation\": \"h\",\n\t\t\t\t\t\"x\": [20, 14],\n\t\t\t\t\t\"y\": [\"available\", \"needed\"],\n\t\t\t\t\t\"category\": \"chemistry\",\n\t\t\t\t\t\"title\": \"CHEM 101\",\n\t\t\t\t\t\"marker\": {\n\t\t\t\t\t\t\"color\": '#26a69a'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"bar\",\n\t\t\t\t\t\"orientation\": \"h\",\n\t\t\t\t\t\"x\": [20, 14],\n\t\t\t\t\t\"y\": [\"available\", \"needed\"],\n\t\t\t\t\t\"category\": \"history\",\n\t\t\t\t\t\"title\": \"HIST 102\",\n\t\t\t\t\t\"marker\": {\n\t\t\t\t\t\t\"color\": '#26a69a'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"bar\",\n\t\t\t\t\t\"orientation\": \"h\",\n\t\t\t\t\t\"x\": [17, 30],\n\t\t\t\t\t\"y\": [\"available\", \"needed\"],\n\t\t\t\t\t\"category\": \"chemistry\",\n\t\t\t\t\t\"title\": \"CHEM 201\", \n\t\t\t\t\t\"marker\": {\n\t\t\t\t\t\t\"color\": '#ee6e73'\n\t\t\t\t\t}\n\t\t\t\t},\t\t\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"bar\",\n\t\t\t\t\t\"orientation\": \"h\",\n\t\t\t\t\t\"x\": [16, 14],\n\t\t\t\t\t\"y\": [\"available\", \"needed\"],\n\t\t\t\t\t\"category\": \"history\",\n\t\t\t\t\t\"title\": \"HIST 405\",\n\t\t\t\t\t\"marker\": {\n\t\t\t\t\t\t\"color\": '#26a69a'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"type\": \"bar\",\n\t\t\t\t\t\"orientation\": \"h\",\n\t\t\t\t\t\"x\": [17, 30],\n\t\t\t\t\t\"y\": [\"available\", \"needed\"],\n\t\t\t\t\t\"category\": \"history\",\n\t\t\t\t\t\"title\": \"HIST 301\", \n\t\t\t\t\t\"marker\": {\n\t\t\t\t\t\t\"color\": '#ee6e73'\n\t\t\t\t\t}\n\t\t\t\t},\t\t\t\t\n\t\t\t]\n\t\t}\n\t}\n\n\trender() {\n\n\t\tconsole.log(this.state.major)\n \n\t\tlet majorList = []\n\t\tthis.state.data.map(x => {\n\t\t\tif (majorList.includes(x[\"category\"]) === false) {\n\t\t\t\tmajorList.push(x[\"category\"])\t\n\t\t\t}\n\t\t})\n\n\t\treturn (\n\t\t\t<div className=\"container\">\t\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s12 m12 l12 center-align\">\n\t\t\t\t\t\t<a className=\"dropdown-trigger btn-large\" data-target=\"dropdown\">Majors</a>\n\t\t\t\t\t\t<ul id=\"dropdown\" className=\"dropdown-content\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmajorList.map(x => {\n\t\t\t\t\t\t\t\t\treturn <li onClick={ () => this.setState({\"major\":  x }) }>\n\t\t\t\t\t\t\t\t\t\t<a> { x } </a>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\t\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.data.map(x => {\n\t\t\t\t\t\t\tif (x[\"category\"] === this.state.major) {\n\t\t\t\t\t\t\t\treturn <div className=\"col s4 m4 l4\">\n\t\t\t\t\t\t\t\t\t<Plot data={ [ x ] } layout={{ width: 400, height: 250, bargap: 0.5, \"title\": x[\"title\"] }}  />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ResourceMap","import React, { Component } from 'react';\nimport {Line as LineChart, Bar as BarChart, Pie as PieChart, Radar as RadarChart} from 'react-chartjs';\n\nclass QPanel extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tqueries: this.props.queries,\n\t\t\tcurrentGraph: {\n\t\t\t\t\"graphType\": \"\",\t\n\t\t\t\t\"date\": \"\"\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateGraph(a) {\n\t\tthis.setState({\n\t\t\t\"currentGraph\": a\n\t\t})\n\t}\n\n\trender() {\n\t\tconsole.log(this.state)\n\t\tlet graphNow\n\t\tif (this.state.currentGraph.graphType === \"line\") {\n\t\t\tgraphNow = <LineChart data={ this.state.currentGraph.graphData } options={null} height=\"300px\" width=\"500px\" />\n\t\t} else if (this.state.currentGraph.graphType === \"bar\") {\n\t\t\tgraphNow = <BarChart data={ this.state.currentGraph.graphData } options={null} height=\"300px\" width=\"500px\" />\n\t\t} else if (this.state.currentGraph.graphType === \"radar\") {\n\t\t\tgraphNow =  <RadarChart data={ this.state.currentGraph.graphData } options={null} height=\"300px\" width=\"500px\" />\n\t\t} else {\n\t\t\tgraphNow = <h3>Your Saved Graph</h3>\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"col s6 m6 l6\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.queries.map(x => {\n\t\t\t\t\t\t\treturn <ul>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<button className=\"btn-large\" graphtype={ x.graphType } date={ x.date } onClick={ this.updateGraph.bind(this, x) } > { x.graphType + \" graph saved on \" + x.date } </button>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col s6 m6 l6\">\n\t\t\t\t\t<h4 className=\"center-align\"> { this.state.currentGraph.graphType + \" graph saved on \" + this.state.currentGraph.date } </h4>\n\t\t\t\t\t{ graphNow }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default QPanel","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Graph from \"./Graph\";\nimport UploadComponent from \"./DataUpload\";\nimport ResourceMap from \"./ResourceMap\";\nimport QPanel from \"./Queries\";\n\n\nconst Index = () => <div className=\"row\"><Graph key=\"1\"/><Graph key=\"2\"/></div>\nconst Map = () => <div className=\"row\"><h2 className=\"center-align\">Resource Availability</h2><ResourceMap /></div>\nconst Saved = () => <div className=\"row\"><h2 className=\"center-align\">All of Your Queries in One Place</h2><QPanel /></div>\nconst Upload = () => <div className=\"row\"><h2 className=\"center-align\">Upload New Data to the App</h2><UploadComponent /></div>\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      queries: [\n        {\n          graphData: {\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n              datasets: [\n                  {\n                      label: \"2017\",\n                      fillColor: \"rgba(220,220,220,0.2)\",\n                strokeColor: \"rgba(220,220,220,1)\",\n                pointColor: \"rgba(220,220,220,1)\",\n                pointStrokeColor: \"#fff\",\n                pointHighlightFill: \"#fff\",\n                pointHighlightStroke: \"rgba(220,220,220,1)\",\n                      pointHoverRadius: 5,\n                      pointRadius: 1,\n                      pointHitRadius: 10,\n                      data: [65, 59, 80, 81, 56, 55, 40],\n                      spanGaps: false,\n                  }\n              ]\n          },\n          graphType: \"line\",\n          date: \"2018-11-03\"\n        },\n        {\n          graphData: {\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n              datasets: [\n                  {\n                      label: \"2018\",\n                      fillColor: \"rgba(220,220,220,0.2)\",\n                strokeColor: \"rgba(220,220,220,1)\",\n                pointColor: \"rgba(220,220,220,1)\",\n                pointStrokeColor: \"#fff\",\n                pointHighlightFill: \"#fff\",\n                pointHighlightStroke: \"rgba(220,220,220,1)\",\n                      pointHoverRadius: 5,\n                      pointRadius: 1,\n                      pointHitRadius: 10,\n                      data: [65, 59, 80, 81, 56, 55, 40],\n                      spanGaps: false,\n                  }\n              ]\n          },\n          graphType: \"radar\",\n          date: \"2018-11-02\"\n        },\n        {\n          graphData: {\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n              datasets: [\n                  {\n                      label: \"2019\",\n                      fillColor: \"rgba(220,220,220,0.2)\",\n                strokeColor: \"rgba(220,220,220,1)\",\n                pointColor: \"rgba(220,220,220,1)\",\n                pointStrokeColor: \"#fff\",\n                pointHighlightFill: \"#fff\",\n                pointHighlightStroke: \"rgba(220,220,220,1)\",\n                      pointHoverRadius: 5,\n                      pointRadius: 1,\n                      pointHitRadius: 10,\n                      data: [65, 59, 80, 81, 56, 55, 40],\n                      spanGaps: false,\n                  }\n              ]\n          },\n          graphType: \"bar\",\n          date: \"2018-11-05\"\n        }\n      ]\n    }\n  }\n\n  saveQuery(ob) {\n    let lastState = this.state.queries\n    lastState.push(ob)\n    this.setState({\n      \"queries\": lastState\n    })\n  }\n\n  render() {\n\n    return(\n      <div>\n        <div className=\"row\">\n          <h5 className=\"brand-logo center\">Tiger Dash</h5>\n        </div>\n        <Router>\n          <div className=\"row\" style={{ display: \"flex\" }}>\n            <div className=\"col s1 m2 l1\" style={{ width: \"20%\" }}>\n              <div className=\"nav-wrapper\">\n                <nav style={{ height: 250 }}>\n                  <ul style={{ padding: 0 }}>\n                    <li style={{ float: \"none\" }}>\n                      <Link to=\"/\" className=\"center-align\">Charts and Visualizations</Link>\n                    </li>\n                    <li style={{ float: \"none\" }}>\n                      <Link to=\"/map/\" className=\"center-align\">Resource Availability</Link>\n                    </li>\n                    <li style={{ float: \"none\" }}>\n                      <Link to=\"/saved/\" className=\"center-align\">Saved Queries</Link>\n                    </li>\n                    <li style={{ float: \"none\" }}>\n                      <Link to=\"/upload/\" className=\"center-align\">Upload Data</Link>\n                    </li>\n                  </ul>\n                </nav>\n              </div>\n            </div>\n\n            <div className=\"col s11 m10 l11\" style={{ flex: 1 }}>\n                <Route path=\"/\" exact component={ () => <div className=\"row\"><Graph saveQuery={ (ob) => this.saveQuery.bind(this, ob) } key=\"1\"/><Graph saveQuery={ (ob) => this.saveQuery.bind(this, ob) } key=\"2\"/></div> } />\n                <Route path=\"/map/\" component={ () => <div className=\"row\"><h2 className=\"center-align\">Resource Availability</h2><ResourceMap /></div> } />\n                <Route path=\"/saved/\" component={ () => <div className=\"row\"><h2 className=\"center-align\">All of Your Queries in One Place</h2><QPanel queries={ this.state.queries } /></div> } />\n                <Route path=\"/upload/\" component={ () => <div className=\"row\"><h2 className=\"center-align\">Upload New Data to the App</h2><UploadComponent /></div> } />\n            </div>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}